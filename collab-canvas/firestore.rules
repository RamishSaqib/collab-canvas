rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions for collaboration
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(projectData) {
      return isAuthenticated() && 
             projectData.createdBy == request.auth.uid;
    }
    
    function canViewProject(projectData) {
      // User can view if:
      // 1. They are the owner
      // 2. Project is public
      // Note: More granular collaborator checking is handled in frontend
      return isAuthenticated() && (
        isOwner(projectData) ||
        projectData.isPublic == true
      );
    }
    
    function canEditProject(projectData) {
      // For now, only owner can edit
      // Fine-grained editor permissions will be enforced in frontend
      return isOwner(projectData);
    }
    
    // Projects - with collaboration support
    match /projects/{projectId} {
      // Allow read if user can view the project
      allow read: if canViewProject(resource.data);
      
      // Allow create if user is setting themselves as creator
      allow create: if isAuthenticated() && 
                    request.auth.uid == request.resource.data.createdBy;
      
      // Allow update if user is owner
      // Note: Editor permissions are enforced in frontend
      allow update: if canEditProject(resource.data);
      
      // Allow delete only if user is owner
      allow delete: if isOwner(resource.data);
      
      // Shapes within a project
      match /shapes/{shapeId} {
        // Allow read if user can view the project
        allow read: if canViewProject(get(/databases/$(database)/documents/projects/$(projectId)).data);
        
        // Allow write if user can edit the project
        allow write: if canEditProject(get(/databases/$(database)/documents/projects/$(projectId)).data);
      }
      
      // Comments within a project
      match /comments/{commentId} {
        // Allow read if user can view the project
        allow read: if canViewProject(get(/databases/$(database)/documents/projects/$(projectId)).data);
        
        // Allow create if user is authenticated and can view the project
        allow create: if isAuthenticated() && canViewProject(get(/databases/$(database)/documents/projects/$(projectId)).data);
        
        // Allow update/delete if user is comment author or project owner
        allow update, delete: if isAuthenticated() && 
                              (request.auth.uid == resource.data.author.id ||
                               isOwner(get(/databases/$(database)/documents/projects/$(projectId)).data));
      }
    }
    
    // Legacy: Old canvas objects (for backward compatibility, can be removed later)
    match /canvases/{canvasId}/objects/{objectId} {
      allow read, write: if request.auth != null;
    }
    
    match /canvases/{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}

